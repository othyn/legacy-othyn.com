/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	// NPM - CSS - Lib
	__webpack_require__(1);
	__webpack_require__(2);
	
	// LOCAL - JS - Lib
	__webpack_require__(6);
	
	// LOCAL - SCSS - Project
	__webpack_require__(3);
	
	// Text Scramble Init: http://codepen.io/soulwire/pen/mErPAK
	let phrases = ['Hi, I\'m Ben', 'or often Othyn', 'I like to build stuff', 'Explore stuff', 'Learn stuff', 'Just lots of stuff really'];
	let Scramble = new TextScramble(document.querySelector('#scramble'));
	let counter = 0;
	let next = function next() {
		Scramble.setText(phrases[counter]).then(function () {
			setTimeout(next, 3000);
		});
		counter = (counter + 1) % phrases.length;
	};
	next();

/***/ },
/* 1 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 2 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 3 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = "//'use strict'; - See https://github.com/webpack/script-loader/issues/21\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n// ————————————————————————————————————————————————————\r\n// TextScramble - http://codepen.io/soulwire/pen/mErPAK\r\n// ————————————————————————————————————————————————————\r\n\r\nvar TextScramble = function () {\r\n\tfunction TextScramble(el) {\r\n\t\t_classCallCheck(this, TextScramble);\r\n\r\n\t\tthis.el = el;\r\n\t\tthis.chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\t\tthis.update = this.update.bind(this);\r\n\t}\r\n\r\n\tTextScramble.prototype.setText = function setText(newText) {\r\n\t\tvar _this = this;\r\n\r\n\t\tvar oldText = this.el.innerText;\r\n\t\tvar length = Math.max(oldText.length, newText.length);\r\n\t\tvar promise = new Promise(function (resolve) {\r\n\t\t\treturn _this.resolve = resolve;\r\n\t\t});\r\n\t\tthis.queue = [];\r\n\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\tvar from = oldText[i] || '';\r\n\t\t\tvar to = newText[i] || '';\r\n\t\t\tvar start = Math.floor(Math.random() * 40);\r\n\t\t\tvar end = start + Math.floor(Math.random() * 40);\r\n\t\t\tthis.queue.push({ from: from, to: to, start: start, end: end });\r\n\t\t}\r\n\t\tcancelAnimationFrame(this.frameRequest);\r\n\t\tthis.frame = 0;\r\n\t\tthis.update();\r\n\t\treturn promise;\r\n\t};\r\n\r\n\tTextScramble.prototype.update = function update() {\r\n\t\tvar output = '';\r\n\t\tvar complete = 0;\r\n\t\tfor (var i = 0, n = this.queue.length; i < n; i++) {\r\n\t\t\tvar _queue$i = this.queue[i];\r\n\t\t\tvar from = _queue$i.from;\r\n\t\t\tvar to = _queue$i.to;\r\n\t\t\tvar start = _queue$i.start;\r\n\t\t\tvar end = _queue$i.end;\r\n\t\t\tvar char = _queue$i.char;\r\n\r\n\t\t\tif (this.frame >= end) {\r\n\t\t\t\tcomplete++;\r\n\t\t\t\toutput += to;\r\n\t\t\t} else if (this.frame >= start) {\r\n\t\t\t\tif (!char || Math.random() < 0.28) {\r\n\t\t\t\t\tchar = this.randomChar();\r\n\t\t\t\t\tthis.queue[i].char = char;\r\n\t\t\t\t}\r\n\t\t\t\toutput += '<span class=\"corrupt\">' + char + '</span>';\r\n\t\t\t} else {\r\n\t\t\t\toutput += from;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.el.innerHTML = output;\r\n\t\tif (complete === this.queue.length) {\r\n\t\t\tthis.resolve();\r\n\t\t} else {\r\n\t\t\tthis.frameRequest = requestAnimationFrame(this.update);\r\n\t\t\tthis.frame++;\r\n\t\t}\r\n\t};\r\n\r\n\tTextScramble.prototype.randomChar = function randomChar() {\r\n\t\treturn this.chars[Math.floor(Math.random() * this.chars.length)];\r\n\t};\r\n\r\n\treturn TextScramble;\r\n} ();"

/***/ },
/* 5 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	module.exports = function(src) {
		if (typeof execScript !== "undefined")
			execScript(src);
		else
			eval.call(null, src);
	}


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(5)(__webpack_require__(4))

/***/ }
/******/ ]);